{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Saving with Text","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyN0H08K79qqrEkk22mUmq7Q"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":19,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xOmiuzP3u6Z1","executionInfo":{"status":"ok","timestamp":1643223681573,"user_tz":480,"elapsed":6546,"user":{"displayName":"GameMusicEnthusiast","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GilKuaNgqEQixCvSsgtUNYkBKutfj6_HqmZJj7v=s64","userId":"15069885440578359632"}},"outputId":"aee8f974-5468-4ebc-db55-341b5fdc329e"},"outputs":[{"output_type":"stream","name":"stdout","text":["LOGIN | SIGNUPLOGIN\n","Enter your usernamedan\n","Enter your passwordtrenholmmm\n","You have entered an incorrect password or login\n","Please select a value.\n"]}],"source":["import os.path\n","\n","#### We must construct functions for the user\n","\n","def registration():\n","  openfile = open(\"savedata2.txt\", \"r\");\n","  \n","  ####Take an input for your UserName\n","  UserName = input(\"What is your name? :\");\n","  ####Take an input for your password\n","  Password = input(\" What is your current password :\")\n","  ####Confirm your password\n","  confirmPassword = input(\"Confirm your password.\") \n","  ####Create a list for your stored Usernames\n","  UserList = [];\n","  ####Create a list for your stored passwords\n","  PasswordList = [];\n","  #### Check for usernames and passwords that are currently stored\n","  for i in openfile:\n","    ####Splitting the password and usernames, and retreiving the closest available letter when the password reaches.\n","    #### Then striping the text from where it was used.\n","    a,b = i.split(\"- \");\n","    b = b.strip();\n","    ####Putting values in the two lists\n","    UserList.append(a);\n","    PasswordList.append(b);\n","    ####Putting the values into a dictionary that can be stored for use\n","    savedata = dict(zip(UserList, PasswordList));\n","    #You can chose to view dictionary data by using a print function to see that they line up when created\n","\n","\n","\n","\n","  if (Password != confirmPassword):\n","    print(\"passwords do not match!\");\n","  #### Call function to restart the process by restarting function\n","    registration();\n","  else: \n","    #### Checks length of password to see if it is too short\n","    if len(Password)<= 8:\n","      print(\"Password is too short\");\n","      registration();\n","      #### This is important as \"in\" CHECKS if the UserName is in the currently stored input you have made.\n","    elif (UserName in UserList):\n","      print(\"Username does exist\");\n","      registration();\n","    else:\n","      ####Interesting to use a instead of r...\n","      openfile = open(\"savedata2.txt\" , \"a\");\n","      ####write in new values\n","      openfile.write(UserName+\"- \"+Password +\"\\n\");\n","      print(\"The Username and Password have been added\");\n","\n","    \n","    \n","    \n","  \n","def ToFile():\n","  User = input(\"Enter your username\");\n","  Pass = input(\"Enter your password\");\n","  saveData = open(\"savedata2.txt\", \"r\");\n","####\n","  if not len(User or Pass) <= 1:\n","     ####Create a list for your stored Usernames\n","    UserList = [];\n","  ####Create a list for your stored passwords\n","    PasswordList = [];\n","    for i in saveData:\n","    ####Splitting the password and usernames, and retreiving the closest available letter when the password reaches.\n","    #### Then striping the text from where it was used.\n","      a,b = i.split(\"- \");\n","      b = b.strip();\n","    ####Putting values in the two lists\n","      UserList.append(a);\n","      PasswordList.append(b);\n","    ####Putting the values into a dictionary that can be stored for use\n","      savedata = dict(zip(UserList, PasswordList));\n","    #You can chose to view dictionary data by using a print function to see that they line up when created\n","\n","  try: \n","    #### Checks the save data for the variable User\n","    if(savedata[User]):\n","      try: \n","        #### If password equals the saveData of the User (1st column) match the second column(the password column in the dictionary)\n","        if(Pass == saveData(User)):\n","          print(\"Login has worked successfully\");\n","          print(\"Hello \" + User);\n","        else :\n","          print(\"You have entered an incorrect password or login...\");\n","      except :\n","         print(\"You have entered an incorrect password or login\");\n","    else : \n","      print(\"Username or password doesn't exist\");\n","  except :\n","    print(\"Username and password does not exist\")\n","  else: \n","    print(\"Please select a value.\");\n","\n","####This function is called at the very start of the program\n","def StartUp(option = None):\n","  ####check input for either LOGIN or SIGNUP\n","  option = input(\"LOGIN | SIGNUP\");\n","  if(option == \"LOGIN\"):\n","    ToFile();\n","  elif option == \"SIGNUP\":\n","       registration();\n","  else :\n","      print(\"Enter an option, please.\");\n","\n","StartUp();\n","\n","  \n","\n","    \n","\n","\n","\n","\n","\n"]},{"cell_type":"code","source":[""],"metadata":{"id":"eT2hL0jOvsSU"},"execution_count":null,"outputs":[]}]}